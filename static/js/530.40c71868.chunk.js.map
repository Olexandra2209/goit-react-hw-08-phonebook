{"version":3,"file":"static/js/530.40c71868.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/SearchInput/SearchInput.styled.js","components/SearchInput/SearchInput.js","pages/Contacts.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { FormContainer, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const addContactHandler = event => {\n    event.preventDefault();\n\n    if (!name || !number) return;\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer onSubmit={addContactHandler}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        placeholder=\"Name\"\n      />\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={e => setNumber(e.target.value)}\n        placeholder=\"Phone number\"\n      />\n      <Button type=\"submit\">Add Contact</Button>\n    </FormContainer>\n  );\n};\n\nexport default ContactForm;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter.value;\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 300px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  margin: 5px 0;\n  background-color: #f8f8f8;\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n\n  button {\n    background-color: #cb6d6d;\n    color: white;\n    border: none;\n    padding: 5px 10px;\n    cursor: pointer;\n    transition: background-color 0.3s ease-in-out;\n\n    &:hover {\n      background-color: #c82333;\n    }\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { ListContainer, ListItem } from './ContactList.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const deleteContactHandler = id => {\n    dispatch(deleteContact(id));\n  };\n  const filteredContacts = contacts.filter(contact => {\n    if (\n      contact.name &&\n      typeof contact.name === 'string' &&\n      filter &&\n      typeof filter === 'string'\n    ) {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    }\n    return true;\n  });\n\n  return (\n    <ListContainer>\n      {filteredContacts.map(contact => (\n        <ListItem key={contact.id}>\n          <span>\n            {contact.name}: {contact.number}\n          </span>\n          <button onClick={() => deleteContactHandler(contact.id)}>\n            Delete\n          </button>\n        </ListItem>\n      ))}\n    </ListContainer>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Filters = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 315px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput, Filters } from './SearchInput.styled';\n\nconst SearchInput = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Filters>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Search contacts\"\n      />\n    </Filters>\n  );\n};\n\nexport default SearchInput;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport SearchInput from 'components/SearchInput/SearchInput';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <SearchInput />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","_jsxs","FormContainer","onSubmit","event","preventDefault","newContact","addContact","children","_jsx","Input","type","value","onChange","e","target","placeholder","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","ListContainer","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ContactList","useSelector","filteredContacts","contact","toLowerCase","includes","map","onClick","deleteContact","Filters","FilterInput","setFilter","Contacts","useEffect","fetchContacts","_Fragment","Helmet","ContactForm","SearchInput"],"sourceRoot":""}